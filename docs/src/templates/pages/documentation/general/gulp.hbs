---
title: Build Tasks – Gulp
section-title: General Docs
description: Documentation on the UI Build Tasks
docs: true

navgroup: documentation
navsub: docs-general
navactive: gulp
---


Gulp ties together the front-end tasks that are run on the Just Eat web platform, such as Sass compilation and Babel transpilation.

Gulp and its associated plugins can be managed via [NPM](https://www.npmjs.com/) or [Yarn](https://yarnpkg.com/en/) package managers. We recomemnd using Yarn, which is why all fozzie modules come with a `yarn.lock` file at their root.


<a name="gulp-fozzie"></a><h2 class="sg-sectionHeading">gulp-build-fozzie</h2>

We manage all of our gulp tasks across projects with a shared set of configurable tasks using the [`gulp-build-fozzie` module](https://www.npmjs.com/package/@justeat/gulp-build-fozzie).

For details on how to use and figure this module, take a look at the [module's documentation](https://www.npmjs.com/package/@justeat/gulp-build-fozzie#setup).


<a name="gulp-setup"></a><h2 class="sg-sectionHeading">Getting up and running with Gulp</h2>

Here we document two ways of running Gulp tasks locally: using Visual Studio and it’s built-in tools, or running Gulp through the command line.

<a name="gulp-cmd"></a>
#### Using Gulp on Command Line

The first method of using Gulp is straight through the Command Line or Terminal.  To do this simply:

1. **[Install Node.js](https://nodejs.org/)**

    Node.js – and it’s bundled package manager npm – are needed to run Gulp tasks with VS 2013 or VS 2015 Professional.

    Installing this should be as simple as going to the [Node.js website](https://nodejs.org/) and hitting the 'Install' button, which will take you through the install process.  Go with all the defaults throughout the install process and this should install Node and it’s package manager on your system.

2. **Install Gulp**

    Open up a command prompt or terminal window and enter `npm install gulp -g`.  This should install Gulp so that Visual Studio can do it’s magic.

3. **Install Yarn**

    We currently use [Yarn](https://yarnpkg.com/en/) for our project dependencies.  Yarn is very similar to NPM with some small differences in performance and features.

    To install yarn check out the [current recommended process in their documentation](https://yarnpkg.com/en/docs/install) for your platform.

4. **Install the project dependencies**

    Navigate to the directory containing the projects `package.json` using your Command Prompt or Terminal window and then run `yarn`.  Yarn will then install the project dependencies locally on your machine.

You should now be able to run `gulp` from the directory containing the projects `package.json`.

By default, Gulp will run the default task, but you can run any of the project tasks by appending the name of the task to your `gulp` call. For example, running`gulp css` will run the task that compiles the CSS files.

For a full list of tasks avilable, [take a look at the modules documentation](https://github.com/justeat/gulp-build-fozzie#the-gulp-tasks).


<a name="gulp-vs"></a>
### Using Gulp in Visual Studio

Here we document the steps needed to successfully run Gulp using Visual Studio 2017.

#### Setup steps

To get up and running with using Gulp in your setup of Visual Studio, just carry out the following steps:

1. **[Install Node.js](https://nodejs.org/)**

	Node.js – and it’s bundled package manager npm – are needed to run Gulp tasks with VS 2013 or VS 2015 Professional.

	Installing this should be as simple as going to the [Node.js website](https://nodejs.org/) and hitting the 'Install' button, which will take you through the install process.  Go with all the defaults throughout the install process and this should install Node and it’s package manager on your system.

2. **Install Gulp**

	Open up a command prompt or terminal window and enter `npm install gulp -g`.  This should install Gulp so that Visual Studio can do it’s magic.

3. **Check and Install the project dependencies**

	This _should_ be done automatically by Visual Studio.  To check if this is the case, look for a `node_modules` folder in the same directory as the `package.json of your project.

	If there isn't a `node_modules` folder, navigate to the directory containing the projects `package.json` using a Command Prompt or Terminal window and then run `npm install`.  NPM will then install the project dependencies locally on your machine.  If you see any warnings in your command prompt during this step, don’t worry about them, they shouldn’t affect the Gulp build.

4. **Prioritise local Node config in VS**

	Ok, so that’s the dependencies you need installed.  There is just one more option that needs adjusting within Visual Studio.

	In the Visual Studio Menu Bar, go to `Tools –> Options –> Projects and Solutions –> External Web Tools`.  Then, move the `$(PATH)` reference in the displayed list to the top of the list.  It should [look like this](http://i.imgur.com/SmzYdZs.png).

    This prioritises your own locally installed version of Node over that which comes along with Visual Studio (which can become out-of-date).

…and that’s it!

If you don’t plan on editing any CSS yourself, you can forget Gulp even exists and it’ll automatically do it’s thing when you build the project through Visual Studio.



<a name="gulp-yarn"></a><h2 class="sg-sectionHeading">Yarn</h2>

We use Yarn – a Node Package Manager – to install and manage the Gulp packages that we use.  To install Yarn, take a look at their [installation guide for your platform](https://yarnpkg.com/en/docs/install),

To see a full list of the packages we use, check out the [gulp-build-fozzie `package.json`](https://github.com/justeat/gulp-build-fozzie/blob/master/package.json).

When using Gulp for the first time, you will need to install these dependencies through Visual Studio, or by running the following command in a command prompt or terminal:

```sh
yarn
```


<a name="gulp-tasks"></a><h2 class="sg-sectionHeading">Available Tasks</h2>

To see a full list of the tasks that are available as part of the `gulp-build-fozzie` module, [check out the module documentation](https://github.com/justeat/gulp-build-fozzie#the-gulp-tasks).

Note that some tasks will require some configuration – such as telling the module which directories should be compiled.  All of these configuartion details are explained in the documentation as well.



