{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/src/js/docs/index.js","node_modules/qwery/qwery.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","docs","demoEls","default","demoBtnText","whenHidden","whenVisible","init","_demoHandler","demoElCount","demoEl","codeBlock","querySelector","classList","add","demoToggleBtn","document","createElement","textContent","addEventListener","_demoToggle","insertBefore","btn","event","target","nextElementSibling","isHidden","contains","toggle","name","context","definition","define","amd","this","toArray","ar","slice","isNode","el","nodeType","arrayLike","isFinite","flatten","concat","normalizeRoot","root","qwery","doc","selector","opt_root","m","win","isAncestor","getElementsByClassName","match","classOnly","querySelectorAll","window","html","documentElement","element","container","compareDocumentPosition","uniq","j","label"],"mappings":"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","file":"docs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Custom JS for the documentation part of the site\n *\n * Can pull in logging modules â€“ such as those used for the address lookup\n */\n\nimport $ from 'qwery';\n\n// any additional docs functionality goes in here\nconst docs = {\n    demoEls: $('.demo'),\n    demoBtnText: {\n        whenHidden: 'Show Code',\n        whenVisible: 'Hide Code'\n    },\n\n    // controls all of our base initialsation functions\n    init: () => {\n\n        docs._demoHandler();\n\n    },\n\n    _demoHandler: () => {\n\n        const demoElCount = docs.demoEls.length;\n\n        for (let i = 0; i < demoElCount; i++) {\n            const demoEl = docs.demoEls[i],\n                codeBlock = demoEl.querySelector('.demo-code');\n\n            codeBlock.classList.add('is-hidden');\n\n            const demoToggleBtn = document.createElement('a');\n            demoToggleBtn.classList.add('o-btn', 'o-btn--codeToggle');\n            demoToggleBtn.textContent = docs.demoBtnText.whenHidden;\n            demoToggleBtn.addEventListener('click', docs._demoToggle);\n            demoEl.insertBefore(demoToggleBtn, codeBlock);\n        }\n\n    },\n\n    _demoToggle: () => {\n\n        const btn = event.target,\n            codeBlock = btn.nextElementSibling,\n            isHidden = codeBlock.classList.contains('is-hidden');\n\n        codeBlock.classList.toggle('is-hidden');\n        btn.classList.toggle('is-clicked');\n\n        if (isHidden) {\n            btn.textContent = docs.demoBtnText.whenVisible;\n        } else {\n            btn.textContent = docs.demoBtnText.whenHidden;\n        }\n\n    }\n\n};\n\ndocs.init();\n","/*!\n  * @preserve Qwery - A selector engine\n  * https://github.com/ded/qwery\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else context[name] = definition()\n})('qwery', this, function () {\n\n  var classOnly = /^\\.([\\w\\-]+)$/\n    , doc = document\n    , win = window\n    , html = doc.documentElement\n    , nodeType = 'nodeType'\n  var isAncestor = 'compareDocumentPosition' in html ?\n    function (element, container) {\n      return (container.compareDocumentPosition(element) & 16) == 16\n    } :\n    function (element, container) {\n      container = container == doc || container == window ? html : container\n      return container !== element && container.contains(element)\n    }\n\n  function toArray(ar) {\n    return [].slice.call(ar, 0)\n  }\n\n  function isNode(el) {\n    var t\n    return el && typeof el === 'object' && (t = el.nodeType) && (t == 1 || t == 9)\n  }\n\n  function arrayLike(o) {\n    return (typeof o === 'object' && isFinite(o.length))\n  }\n\n  function flatten(ar) {\n    for (var r = [], i = 0, l = ar.length; i < l; ++i) arrayLike(ar[i]) ? (r = r.concat(ar[i])) : (r[r.length] = ar[i])\n    return r\n  }\n\n  function uniq(ar) {\n    var a = [], i, j\n    label:\n    for (i = 0; i < ar.length; i++) {\n      for (j = 0; j < a.length; j++) {\n        if (a[j] == ar[i]) {\n          continue label\n        }\n      }\n      a[a.length] = ar[i]\n    }\n    return a\n  }\n\n\n  function normalizeRoot(root) {\n    if (!root) return doc\n    if (typeof root == 'string') return qwery(root)[0]\n    if (!root[nodeType] && arrayLike(root)) return root[0]\n    return root\n  }\n\n  /**\n   * @param {string|Array.<Element>|Element|Node} selector\n   * @param {string|Array.<Element>|Element|Node=} opt_root\n   * @return {Array.<Element>}\n   */\n  function qwery(selector, opt_root) {\n    var m, root = normalizeRoot(opt_root)\n    if (!root || !selector) return []\n    if (selector === win || isNode(selector)) {\n      return !opt_root || (selector !== win && isNode(root) && isAncestor(selector, root)) ? [selector] : []\n    }\n    if (selector && arrayLike(selector)) return flatten(selector)\n\n\n    if (doc.getElementsByClassName && selector == 'string' && (m = selector.match(classOnly))) {\n      return toArray((root).getElementsByClassName(m[1]))\n    }\n    // using duck typing for 'a' window or 'a' document (not 'the' window || document)\n    if (selector && (selector.document || (selector.nodeType && selector.nodeType == 9))) {\n      return !opt_root ? [selector] : []\n    }\n    return toArray((root).querySelectorAll(selector))\n  }\n\n  qwery.uniq = uniq\n\n  return qwery\n}, this);\n"]}